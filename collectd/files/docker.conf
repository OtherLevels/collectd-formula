{%- from "collectd/map.jinja" import collectd_settings with context -%}

# Configure the docker-collectd-plugin
TypesDB "/usr/share/collectd/docker-collectd-plugin/dockerplugin.db"

<LoadPlugin python>
  Globals true
</LoadPlugin>

<Plugin python>
  ModulePath "/usr/share/collectd/docker-collectd-plugin"
  Import "dockerplugin"

  <Module "dockerplugin">
{%- if collectd_settings.plugins.docker.baseurl is defined %}
    BaseURL "{{ collectd_settings.plugins.docker.baseurl }}"
{%- endif %}
{%- if collectd_settings.plugins.docker.timeout is defined %}
    Timeout {{ collectd_settings.plugins.docker.timeout }}
{%- endif %}
  </Module>
</Plugin>

LoadPlugin match_regex
<Chain "PostCache">
  <Rule>
    <Match "regex">
      Plugin "^docker$"
    </Match>
    <Target "jump">
      Chain "FilterOutDetailedDockerStats"
    </Target>
  </Rule>

  Target "write"
</Chain>
<Chain "FilterOutDetailedDockerStats">
  <Rule "CpuPercent">
    <Match "regex">
      Type "^cpu.percent$"
    </Match>
    Target "return"
  </Rule>
  <Rule "CpuUsage">
    <Match "regex">
      Type "^cpu.usage$"
    </Match>
    Target "return"
  </Rule>
  <Rule "MemoryPercent">
    <Match "regex">
      Type "^memory.percent$"
    </Match>
    Target "return"
  </Rule>
  <Rule "MemoryUsage">
    <Match "regex">
      Type "^memory.usage$"
    </Match>
    Target "return"
  </Rule>
  <Rule "NetworkUsage">
    <Match "regex">
      Type "^network.usage$"
    </Match>
    Target "return"
  </Rule>

  Target "stop"
</Chain>
